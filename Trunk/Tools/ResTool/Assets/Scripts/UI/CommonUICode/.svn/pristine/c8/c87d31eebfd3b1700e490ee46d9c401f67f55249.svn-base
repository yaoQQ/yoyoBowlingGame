using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.EventSystems;
public class UIExClickListener : UIBehaviour, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler
{
    [Tooltip("双击界定时间")]
    public const float shortDefinition = 0.2f;
    public static UIExClickListener Get(GameObject go)
    {
        UIExClickListener listener = go.GetComponent<UIExClickListener>();
        if (listener == null) listener = go.AddComponent<UIExClickListener>();
        return listener;
    }


    public Action<GameObject> onSingleHandler;
    public Action<GameObject> onDoubleHandler;

    private UIExLongClickListener longListener;

    private bool m_isDragging = false;
    public bool isDragging
    {
        get { return m_isDragging; }
        set { m_isDragging = value; }
    }

    void Update()
    {
        if (downTimeQueue.Count > 0)
        {
            var lastTime = downTimeQueue.Peek();
            var curTime = Time.unscaledTime;
            var deltaTime = curTime - lastTime;
            //Debug.Log("deltaTime = " + deltaTime);
            if (deltaTime >= shortDefinition && !isDouble)
            {
                //Debug.Log("单击");
                downTimeQueue.Clear();
                if (isLongPressed() == false && isUp && !m_isDragging)
                {
                    if (onSingleHandler != null) onSingleHandler.Invoke(gameObject);
                }
            }
            else if (isDouble)
                downTimeQueue.Clear();

        }

    }

    /// <summary>
    /// 无论是单击还是双击, 都要排除可能由于点下和弹起的时间间隔过长触发长按事件, 以及拖动事件
    /// </summary>
    /// <returns></returns>
    private bool isLongPressed()
    {
        if (longListener == null)
            longListener = GetComponent<UIExLongClickListener>();
        if (longListener == null)
            return false;
        return longListener.IsLongPressTriggered;
    }

    private bool isDouble = false;
    private bool isUp = false;

    public void OnPointerClick(PointerEventData eventData)
    {
        if (eventData.clickCount == 2)
        {
            isDouble = true;
            if (isLongPressed() == false && !m_isDragging)
                if (onDoubleHandler != null) onDoubleHandler.Invoke(gameObject);
        }
    }
    private Queue<float> downTimeQueue = new Queue<float>();
    public void OnPointerDown(PointerEventData eventData)
    {
        //Debug.Log(string.Format("点击按下. {0} {1}", gameObject.name, eventData.pointerPressRaycast.gameObject.name));
        if (downTimeQueue.Count < 2)
        {
            var time = Time.unscaledTime;
            downTimeQueue.Enqueue(time);
        }
        isDouble = false;
        isUp = false;
    }

    public void OnPointerUp(PointerEventData eventData)
    {
        isUp = true;

    }
}
